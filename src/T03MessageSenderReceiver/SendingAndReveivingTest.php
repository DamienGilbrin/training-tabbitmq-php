<?phpnamespace Training\T03MessageSenderReceiver;use PhpAmqpLib\Connection\AMQPStreamConnection;use PhpAmqpLib\Message\AMQPMessage;use PHPUnit\Framework\Assert as Assertions;use Training\Quotations\QuotationService;class SendingAndReveivingTest{    private $quotationService;    public function __construct()    {        $this->quotationService = new QuotationService();    }    public function __invoke()    {        $connection = new AMQPStreamConnection('rabbitmq', 5672, 'guest', 'guest');        $channel = $connection->channel();        $quotationString = $this->quotationService->next();        $message = new AMQPMessage($quotationString);        $channel->basic_publish($message, "quotations", "nasq");        /** @var AMQPMessage $response */        $response = null;        $attempts = 5;        while($response === null && $attempts-- > 0)        {            $response = $channel->basic_get("quotations", true);        }        Assertions::assertNotNull($response);        $receivedQuotation = $response->getBody();        Assertions::assertEquals($receivedQuotation, $quotationString);        $channel->close();        $connection->close();    }}